#
# OpenSSL Configuration file for a Multi-level CA
#
HOME            = .
RANDFILE        = $ENV::HOME/.rnd
###################################################################
[ default_root ]
ca              = root_ca       # CA name

##          CA certificate request          ##

[ req ]
default_bits        = 2048
encrypt_key         = yes
default_md          = sha256
string_mask         = nombstr
prompt              = no
distinguished_name  = ca_dn
req_extensions      = ca_reqext


attributes      = req_attributes
x509_extensions = v3_ca # The extentions to add to the self signed cert

[ ca_dn ]
countryName             = DE
stateOrProvinceName     = Hamburg
organizationName        = haw-hamburg

[ ca_reqext ]

keyUsage                = critical, cRLSign, keyCertSign
basicConstraints        = critical, CA:true
subjectKeyIdentifier    = hash
##          CA operational settings          ##
[ ca ]
default_ca      = root_ca        # The default ca section

[ root_ca ]

dir             = $HOME/SVSRootCA        # Where everything is kept
certs           = $dir/certs  # Where the issued certs are kept
crl_dir        = $dir/crl  # Where the issued crl are kept
database        = $dir/index  # database index file.
#unique_subject = no

new_certs_dir   = $dir/newcerts      # default place for new certs.

certificate     = $dir/cacert.pem # The CA certificate
serial          = $dir/serial # The current serial number
crlnumber       = $dir/crlnumber

crl            = $dir/crl.pem      # The current CRL
private_key     = $dir/signingCA.key # The private key


x509_extensions = v3_ca      # The extentions to add to the cert

# Comment out the following two lines for the "traditional"
# (and highly broken) format.
name_opt        = ca_default        # Subject Name options
cert_opt        = ca_default        # Certificate field options

# Extension copying option: use with caution.
# copy_extensions = copy

# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
# so this is commented out by default to leave a V1 CRL.
# crl_extensions  = crl_ext

default_days      = 365           # how long to certify for
default_crl_days  = 28            # how long before next CRL
default_md        = sha256           # which md to use.
preserve          = no            # keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy      = policy_match_root

##################################################################################################
[ CA_Sub ]

dir             = ./WPSubCA        # Where everything is kept
certs           = $dir/certs  # Where the issued certs are kept
crl_dir        = $dir/crl  # Where the issued crl are kept
database        = $dir/index  # database index file.
#unique_subject = no

new_certs_dir   = $dir/newcerts      # default place for new certs.

certificate     = $dir/cacert.pem # The CA certificate
serial          = $dir/serial # The current serial number
crlnumber       = $dir/crlnumber

crl            = $dir/crl.pem      # The current CRL
private_key     = $dir/signingCA.key # The private key


x509_extensions = v3_ca_sub      # The extentions to add to the cert

# Comment out the following two lines for the "traditional"
# (and highly broken) format.
name_opt        = ca_default        # Subject Name options
cert_opt        = ca_default        # Certificate field options

# Extension copying option: use with caution.
# copy_extensions = copy

# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
# so this is commented out by default to leave a V1 CRL.
# crl_extensions  = crl_ext

default_days      = 365           # how long to certify for
default_crl_days  = 28            # how long before next CRL
default_md        = sha256           # which md to use.
preserve          = no            # keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy      = policy_match_sub

######################################################################################
[ CA_Server ]

dir             = ./WPServerCA        # Where everything is kept
certs           = $dir/certs  # Where the issued certs are kept
crl_dir        = $dir/crl  # Where the issued crl are kept
database        = $dir/index  # database index file.
#unique_subject = no

new_certs_dir   = $dir/newcerts      # default place for new certs.

certificate     = $dir/cacert.pem # The CA certificate
serial          = $dir/serial # The current serial number
crlnumber       = $dir/crlnumber

crl            = $dir/crl.pem      # The current CRL
private_key     = $dir/signingCA.key # The private key


x509_extensions = v3_ca_server      # The extentions to add to the cert

# Comment out the following two lines for the "traditional"
# (and highly broken) format.
name_opt        = ca_default        # Subject Name options
cert_opt        = ca_default        # Certificate field options

# Extension copying option: use with caution.
# copy_extensions = copy

# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
# so this is commented out by default to leave a V1 CRL.
# crl_extensions  = crl_ext

default_days      = 365           # how long to certify for
default_crl_days  = 28            # how long before next CRL
default_md        = sha256           # which md to use.
preserve          = no            # keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy      = policy_match_server

######################################################################################



# For the CA policy root
[ policy_match_root ]
countryName             = DE
stateOrProvinceName     = Hamburg
localityName            = Hamburg
organizationName        = haw-hamburg
organizationalUnitName  = optional
commonName              = SVS Root CA
emailAddress            = optional

[ policy_match_sub ]
countryName             = DE
stateOrProvinceName     = Hamburg
localityName            = Hamburg
organizationName        = haw-hamburg
organizationalUnitName  = SVS
commonName              = Sub-CA-25
emailAddress            = optional

[ policy_match_server ]
countryName             = DE
stateOrProvinceName     = Hamburg
localityName            = Hamburg
organizationName        = haw-hamburg
organizationalUnitName  = SVS
commonName              = svs25.ful.informatik.haw-hamburg.de
emailAddress            = optional

# For the 'anything' policy
# At this point in time, you must list all acceptable 'object'
# types.
[ policy_anything ]
countryName         = optional
stateOrProvinceName = optional
localityName        = optional
organizationName    = optional
organizationalUnitName  = optional
commonName          = supplied
emailAddress        = optional

####################################################################
[ req_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default     = DE
countryName_min         = 2
countryName_max         = 2

stateOrProvinceName     = State or Province Name (full name)
stateOrProvinceName_default = Hamburg

localityName            = Locality Name (eg, city)
localityName_default        = Hamburg

0.organizationName      = Organization Name (eg, company)
0.organizationName_default  = haw-hamburg

1.organizationName      = Second Organization Name (eg, company)
1.organizationName_default  = WP Security

#organizationalUnitName      = Organizational Unit Name (eg, section)
#organizationalUnitName_default  = 

commonName          = Common Name (eg, YOUR name)
commonName_max          = 64

emailAddress            = Email Address
emailAddress_max        = 64

# SET-ex3           = SET extension number 3

[ req_attributes ]
challengePassword     = A challenge password
challengePassword_min     = 4
challengePassword_max     = 20

unstructuredName      = WP Security

[ usr_cert ]

# These extensions are added when 'ca' signs a request.

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints=CA:FALSE

# Here are some examples of the usage of nsCertType. If it is omitted
# the certificate can be used for anything *except* object signing.

# This is OK for an SSL server.
# nsCertType            = server

# For an object signing certificate this would be used.
# nsCertType = objsign

# For normal client use this is typical
# nsCertType = client, email

# and for everything including object signing:
# nsCertType = client, email, objsign

# This is typical in keyUsage for a client certificate.
# keyUsage = nonRepudiation, digitalSignature, keyEncipherment

# This will be displayed in Netscape's comment listbox.
nsComment           = "OpenSSL Generated Certificate"

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer:always

# This stuff is for subjectAltName and issuerAltname.
# Import the email address.
# subjectAltName=email:copy
# An alternative to produce certificates that aren't
# deprecated according to PKIX.
# subjectAltName=email:move

# Copy subject details
# issuerAltName=issuer:copy

#nsCaRevocationUrl      = http://www.domain.dom/ca-crl.pem
#nsBaseUrl
#nsRevocationUrl
#nsRenewalUrl
#nsCaPolicyUrl
#nsSslServerName

[ v3_req ]

# Extensions to add to a certificate request

basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment

[ v3_ca ]


# Extensions for a typical CA


# PKIX recommendation.

subjectKeyIdentifier=hash

authorityKeyIdentifier=keyid:always,issuer:always

basicConstraints = critical,CA:true


# Key usage: this is typical for a CA certificate. However since it will
# prevent it being used as an test self-signed certificate it is best
# left out by default.
keyUsage = critical,cRLSign, keyCertSign

# Some might want this also
# nsCertType = sslCA, emailCA

# Include email address in subject alt name: another PKIX recommendation
# subjectAltName=email:copy
# Copy issuer details
# issuerAltName=issuer:copy

# DER hex encoding of an extension: beware experts only!
# obj=DER:02:03
# Where 'obj' is a standard or added object
# You can even override a supported extension:
# basicConstraints= critical, DER:30:03:01:01:FF

[v3_ca_sub]

subjectKeyIdentifier=hash

authorityKeyIdentifier=keyid:always,issuer

basicConstraints = critical,CA:true, pathlen:1

keyUsage = critical,cRLSign, keyCertSign


[v3_ca_server]

subjectKeyIdentifier=hash

authorityKeyIdentifier=keyid,issuer

basicConstraints = critical,CA:true, pathlen:1

keyUsage = nonRepudiation, digitalSignature, keyEncipherment, dataEncipherment

extKeyUsage = serverAuth


[ crl_ext ]

# CRL extensions.
# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.

# issuerAltName=issuer:copy
authorityKeyIdentifier=keyid:always,issuer:always

